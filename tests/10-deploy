#!/usr/bin/env python3

import amulet
import requests
import unittest


class TestDeployment(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.deployment = amulet.Deployment(series="trusty")

        cls.deployment.add('ubuntu')
        cls.deployment.add('munin')
        cls.deployment.add('munin-node')
        cls.deployment.relate('ubuntu:juju-info', 'munin-node:juju-info')
        cls.deployment.relate('munin:munin', 'munin-node:munin')

        try:
            cls.deployment.setup(timeout=900)
            cls.deployment.sentry.wait()
        except amulet.helpers.TimeoutError:
            amulet.raise_status(amulet.SKIP,
                                msg="Environment wasn't stood up in time")
        except:
            raise
        cls.unit = cls.deployment.sentry.unit['munin-node/0']

    def test_case(self):
        unit_munin = self.deployment.sentry.unit['munin/0']
        ip = unit_munin.info['private-address']
        cmd = 'sudo grep "cidr_allow %s/32" /etc/munin/munin-node.conf' % ip
        output, code = self.unit.run(cmd)
        if code != 0:
            amulet.raise_status(amulet.FAIL,
                                msg="%s not found in munin-node.conf" % ip)

        cfg_fpath = '/etc/munin/munin-conf.d/u000000.munin-node'
        cmd = 'sudo test -f %s' % cfg_fpath
        output, code = unit_munin.run(cmd)
        if code != 0:
            amulet.raise_status(amulet.FAIL,
                                msg="u000000.munin-node not found")

        priv_addr = self.unit.info['private-address']
        output, code = unit_munin.run('sudo grep %s %s'
                                      % (priv_addr, cfg_fpath))

        if code != 0:
            amulet.raise_status(amulet.FAIL,
                                msg="%s not found in %s" % (priv_addr,
                                                            cfg_fpath))


if __name__ == '__main__':
    unittest.main()
